/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ejnamespace;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-11-04")
public class Pasajero implements org.apache.thrift.TBase<Pasajero, Pasajero._Fields>, java.io.Serializable, Cloneable, Comparable<Pasajero> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Pasajero");

  private static final org.apache.thrift.protocol.TField DNI_FIELD_DESC = new org.apache.thrift.protocol.TField("DNI", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APELLIDO_FIELD_DESC = new org.apache.thrift.protocol.TField("apellido", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TELFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telfono", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MILLAS_FIELD_DESC = new org.apache.thrift.protocol.TField("millas", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField CLAVE_FIELD_DESC = new org.apache.thrift.protocol.TField("clave", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField DIRECCION_FIELD_DESC = new org.apache.thrift.protocol.TField("direccion", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField NACIONALIDAD_FIELD_DESC = new org.apache.thrift.protocol.TField("nacionalidad", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PasajeroStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PasajeroTupleSchemeFactory();

  public int DNI; // required
  public java.lang.String nombre; // required
  public java.lang.String apellido; // required
  public java.lang.String telfono; // required
  public java.lang.String email; // required
  public double millas; // required
  public java.lang.String clave; // required
  public java.lang.String direccion; // required
  public java.lang.String nacionalidad; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DNI((short)1, "DNI"),
    NOMBRE((short)2, "nombre"),
    APELLIDO((short)3, "apellido"),
    TELFONO((short)4, "telfono"),
    EMAIL((short)5, "email"),
    MILLAS((short)6, "millas"),
    CLAVE((short)7, "clave"),
    DIRECCION((short)8, "direccion"),
    NACIONALIDAD((short)9, "nacionalidad");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DNI
          return DNI;
        case 2: // NOMBRE
          return NOMBRE;
        case 3: // APELLIDO
          return APELLIDO;
        case 4: // TELFONO
          return TELFONO;
        case 5: // EMAIL
          return EMAIL;
        case 6: // MILLAS
          return MILLAS;
        case 7: // CLAVE
          return CLAVE;
        case 8: // DIRECCION
          return DIRECCION;
        case 9: // NACIONALIDAD
          return NACIONALIDAD;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DNI_ISSET_ID = 0;
  private static final int __MILLAS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DNI, new org.apache.thrift.meta_data.FieldMetaData("DNI", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APELLIDO, new org.apache.thrift.meta_data.FieldMetaData("apellido", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TELFONO, new org.apache.thrift.meta_data.FieldMetaData("telfono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MILLAS, new org.apache.thrift.meta_data.FieldMetaData("millas", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CLAVE, new org.apache.thrift.meta_data.FieldMetaData("clave", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DIRECCION, new org.apache.thrift.meta_data.FieldMetaData("direccion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NACIONALIDAD, new org.apache.thrift.meta_data.FieldMetaData("nacionalidad", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Pasajero.class, metaDataMap);
  }

  public Pasajero() {
  }

  public Pasajero(
    int DNI,
    java.lang.String nombre,
    java.lang.String apellido,
    java.lang.String telfono,
    java.lang.String email,
    double millas,
    java.lang.String clave,
    java.lang.String direccion,
    java.lang.String nacionalidad)
  {
    this();
    this.DNI = DNI;
    setDNIIsSet(true);
    this.nombre = nombre;
    this.apellido = apellido;
    this.telfono = telfono;
    this.email = email;
    this.millas = millas;
    setMillasIsSet(true);
    this.clave = clave;
    this.direccion = direccion;
    this.nacionalidad = nacionalidad;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Pasajero(Pasajero other) {
    __isset_bitfield = other.__isset_bitfield;
    this.DNI = other.DNI;
    if (other.isSetNombre()) {
      this.nombre = other.nombre;
    }
    if (other.isSetApellido()) {
      this.apellido = other.apellido;
    }
    if (other.isSetTelfono()) {
      this.telfono = other.telfono;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    this.millas = other.millas;
    if (other.isSetClave()) {
      this.clave = other.clave;
    }
    if (other.isSetDireccion()) {
      this.direccion = other.direccion;
    }
    if (other.isSetNacionalidad()) {
      this.nacionalidad = other.nacionalidad;
    }
  }

  public Pasajero deepCopy() {
    return new Pasajero(this);
  }

  @Override
  public void clear() {
    setDNIIsSet(false);
    this.DNI = 0;
    this.nombre = null;
    this.apellido = null;
    this.telfono = null;
    this.email = null;
    setMillasIsSet(false);
    this.millas = 0.0;
    this.clave = null;
    this.direccion = null;
    this.nacionalidad = null;
  }

  public int getDNI() {
    return this.DNI;
  }

  public Pasajero setDNI(int DNI) {
    this.DNI = DNI;
    setDNIIsSet(true);
    return this;
  }

  public void unsetDNI() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DNI_ISSET_ID);
  }

  /** Returns true if field DNI is set (has been assigned a value) and false otherwise */
  public boolean isSetDNI() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DNI_ISSET_ID);
  }

  public void setDNIIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DNI_ISSET_ID, value);
  }

  public java.lang.String getNombre() {
    return this.nombre;
  }

  public Pasajero setNombre(java.lang.String nombre) {
    this.nombre = nombre;
    return this;
  }

  public void unsetNombre() {
    this.nombre = null;
  }

  /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
  public boolean isSetNombre() {
    return this.nombre != null;
  }

  public void setNombreIsSet(boolean value) {
    if (!value) {
      this.nombre = null;
    }
  }

  public java.lang.String getApellido() {
    return this.apellido;
  }

  public Pasajero setApellido(java.lang.String apellido) {
    this.apellido = apellido;
    return this;
  }

  public void unsetApellido() {
    this.apellido = null;
  }

  /** Returns true if field apellido is set (has been assigned a value) and false otherwise */
  public boolean isSetApellido() {
    return this.apellido != null;
  }

  public void setApellidoIsSet(boolean value) {
    if (!value) {
      this.apellido = null;
    }
  }

  public java.lang.String getTelfono() {
    return this.telfono;
  }

  public Pasajero setTelfono(java.lang.String telfono) {
    this.telfono = telfono;
    return this;
  }

  public void unsetTelfono() {
    this.telfono = null;
  }

  /** Returns true if field telfono is set (has been assigned a value) and false otherwise */
  public boolean isSetTelfono() {
    return this.telfono != null;
  }

  public void setTelfonoIsSet(boolean value) {
    if (!value) {
      this.telfono = null;
    }
  }

  public java.lang.String getEmail() {
    return this.email;
  }

  public Pasajero setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public double getMillas() {
    return this.millas;
  }

  public Pasajero setMillas(double millas) {
    this.millas = millas;
    setMillasIsSet(true);
    return this;
  }

  public void unsetMillas() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MILLAS_ISSET_ID);
  }

  /** Returns true if field millas is set (has been assigned a value) and false otherwise */
  public boolean isSetMillas() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MILLAS_ISSET_ID);
  }

  public void setMillasIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MILLAS_ISSET_ID, value);
  }

  public java.lang.String getClave() {
    return this.clave;
  }

  public Pasajero setClave(java.lang.String clave) {
    this.clave = clave;
    return this;
  }

  public void unsetClave() {
    this.clave = null;
  }

  /** Returns true if field clave is set (has been assigned a value) and false otherwise */
  public boolean isSetClave() {
    return this.clave != null;
  }

  public void setClaveIsSet(boolean value) {
    if (!value) {
      this.clave = null;
    }
  }

  public java.lang.String getDireccion() {
    return this.direccion;
  }

  public Pasajero setDireccion(java.lang.String direccion) {
    this.direccion = direccion;
    return this;
  }

  public void unsetDireccion() {
    this.direccion = null;
  }

  /** Returns true if field direccion is set (has been assigned a value) and false otherwise */
  public boolean isSetDireccion() {
    return this.direccion != null;
  }

  public void setDireccionIsSet(boolean value) {
    if (!value) {
      this.direccion = null;
    }
  }

  public java.lang.String getNacionalidad() {
    return this.nacionalidad;
  }

  public Pasajero setNacionalidad(java.lang.String nacionalidad) {
    this.nacionalidad = nacionalidad;
    return this;
  }

  public void unsetNacionalidad() {
    this.nacionalidad = null;
  }

  /** Returns true if field nacionalidad is set (has been assigned a value) and false otherwise */
  public boolean isSetNacionalidad() {
    return this.nacionalidad != null;
  }

  public void setNacionalidadIsSet(boolean value) {
    if (!value) {
      this.nacionalidad = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case DNI:
      if (value == null) {
        unsetDNI();
      } else {
        setDNI((java.lang.Integer)value);
      }
      break;

    case NOMBRE:
      if (value == null) {
        unsetNombre();
      } else {
        setNombre((java.lang.String)value);
      }
      break;

    case APELLIDO:
      if (value == null) {
        unsetApellido();
      } else {
        setApellido((java.lang.String)value);
      }
      break;

    case TELFONO:
      if (value == null) {
        unsetTelfono();
      } else {
        setTelfono((java.lang.String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((java.lang.String)value);
      }
      break;

    case MILLAS:
      if (value == null) {
        unsetMillas();
      } else {
        setMillas((java.lang.Double)value);
      }
      break;

    case CLAVE:
      if (value == null) {
        unsetClave();
      } else {
        setClave((java.lang.String)value);
      }
      break;

    case DIRECCION:
      if (value == null) {
        unsetDireccion();
      } else {
        setDireccion((java.lang.String)value);
      }
      break;

    case NACIONALIDAD:
      if (value == null) {
        unsetNacionalidad();
      } else {
        setNacionalidad((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DNI:
      return getDNI();

    case NOMBRE:
      return getNombre();

    case APELLIDO:
      return getApellido();

    case TELFONO:
      return getTelfono();

    case EMAIL:
      return getEmail();

    case MILLAS:
      return getMillas();

    case CLAVE:
      return getClave();

    case DIRECCION:
      return getDireccion();

    case NACIONALIDAD:
      return getNacionalidad();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DNI:
      return isSetDNI();
    case NOMBRE:
      return isSetNombre();
    case APELLIDO:
      return isSetApellido();
    case TELFONO:
      return isSetTelfono();
    case EMAIL:
      return isSetEmail();
    case MILLAS:
      return isSetMillas();
    case CLAVE:
      return isSetClave();
    case DIRECCION:
      return isSetDireccion();
    case NACIONALIDAD:
      return isSetNacionalidad();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Pasajero)
      return this.equals((Pasajero)that);
    return false;
  }

  public boolean equals(Pasajero that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_DNI = true;
    boolean that_present_DNI = true;
    if (this_present_DNI || that_present_DNI) {
      if (!(this_present_DNI && that_present_DNI))
        return false;
      if (this.DNI != that.DNI)
        return false;
    }

    boolean this_present_nombre = true && this.isSetNombre();
    boolean that_present_nombre = true && that.isSetNombre();
    if (this_present_nombre || that_present_nombre) {
      if (!(this_present_nombre && that_present_nombre))
        return false;
      if (!this.nombre.equals(that.nombre))
        return false;
    }

    boolean this_present_apellido = true && this.isSetApellido();
    boolean that_present_apellido = true && that.isSetApellido();
    if (this_present_apellido || that_present_apellido) {
      if (!(this_present_apellido && that_present_apellido))
        return false;
      if (!this.apellido.equals(that.apellido))
        return false;
    }

    boolean this_present_telfono = true && this.isSetTelfono();
    boolean that_present_telfono = true && that.isSetTelfono();
    if (this_present_telfono || that_present_telfono) {
      if (!(this_present_telfono && that_present_telfono))
        return false;
      if (!this.telfono.equals(that.telfono))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_millas = true;
    boolean that_present_millas = true;
    if (this_present_millas || that_present_millas) {
      if (!(this_present_millas && that_present_millas))
        return false;
      if (this.millas != that.millas)
        return false;
    }

    boolean this_present_clave = true && this.isSetClave();
    boolean that_present_clave = true && that.isSetClave();
    if (this_present_clave || that_present_clave) {
      if (!(this_present_clave && that_present_clave))
        return false;
      if (!this.clave.equals(that.clave))
        return false;
    }

    boolean this_present_direccion = true && this.isSetDireccion();
    boolean that_present_direccion = true && that.isSetDireccion();
    if (this_present_direccion || that_present_direccion) {
      if (!(this_present_direccion && that_present_direccion))
        return false;
      if (!this.direccion.equals(that.direccion))
        return false;
    }

    boolean this_present_nacionalidad = true && this.isSetNacionalidad();
    boolean that_present_nacionalidad = true && that.isSetNacionalidad();
    if (this_present_nacionalidad || that_present_nacionalidad) {
      if (!(this_present_nacionalidad && that_present_nacionalidad))
        return false;
      if (!this.nacionalidad.equals(that.nacionalidad))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + DNI;

    hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
    if (isSetNombre())
      hashCode = hashCode * 8191 + nombre.hashCode();

    hashCode = hashCode * 8191 + ((isSetApellido()) ? 131071 : 524287);
    if (isSetApellido())
      hashCode = hashCode * 8191 + apellido.hashCode();

    hashCode = hashCode * 8191 + ((isSetTelfono()) ? 131071 : 524287);
    if (isSetTelfono())
      hashCode = hashCode * 8191 + telfono.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(millas);

    hashCode = hashCode * 8191 + ((isSetClave()) ? 131071 : 524287);
    if (isSetClave())
      hashCode = hashCode * 8191 + clave.hashCode();

    hashCode = hashCode * 8191 + ((isSetDireccion()) ? 131071 : 524287);
    if (isSetDireccion())
      hashCode = hashCode * 8191 + direccion.hashCode();

    hashCode = hashCode * 8191 + ((isSetNacionalidad()) ? 131071 : 524287);
    if (isSetNacionalidad())
      hashCode = hashCode * 8191 + nacionalidad.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Pasajero other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetDNI()).compareTo(other.isSetDNI());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDNI()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.DNI, other.DNI);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombre()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApellido()).compareTo(other.isSetApellido());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApellido()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.apellido, other.apellido);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTelfono()).compareTo(other.isSetTelfono());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelfono()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telfono, other.telfono);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMillas()).compareTo(other.isSetMillas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMillas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.millas, other.millas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClave()).compareTo(other.isSetClave());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClave()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clave, other.clave);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDireccion()).compareTo(other.isSetDireccion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDireccion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.direccion, other.direccion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNacionalidad()).compareTo(other.isSetNacionalidad());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNacionalidad()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nacionalidad, other.nacionalidad);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Pasajero(");
    boolean first = true;

    sb.append("DNI:");
    sb.append(this.DNI);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombre:");
    if (this.nombre == null) {
      sb.append("null");
    } else {
      sb.append(this.nombre);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("apellido:");
    if (this.apellido == null) {
      sb.append("null");
    } else {
      sb.append(this.apellido);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("telfono:");
    if (this.telfono == null) {
      sb.append("null");
    } else {
      sb.append(this.telfono);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("millas:");
    sb.append(this.millas);
    first = false;
    if (!first) sb.append(", ");
    sb.append("clave:");
    if (this.clave == null) {
      sb.append("null");
    } else {
      sb.append(this.clave);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("direccion:");
    if (this.direccion == null) {
      sb.append("null");
    } else {
      sb.append(this.direccion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nacionalidad:");
    if (this.nacionalidad == null) {
      sb.append("null");
    } else {
      sb.append(this.nacionalidad);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PasajeroStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PasajeroStandardScheme getScheme() {
      return new PasajeroStandardScheme();
    }
  }

  private static class PasajeroStandardScheme extends org.apache.thrift.scheme.StandardScheme<Pasajero> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Pasajero struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DNI
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.DNI = iprot.readI32();
              struct.setDNIIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NOMBRE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombre = iprot.readString();
              struct.setNombreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APELLIDO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.apellido = iprot.readString();
              struct.setApellidoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TELFONO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telfono = iprot.readString();
              struct.setTelfonoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MILLAS
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.millas = iprot.readDouble();
              struct.setMillasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CLAVE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clave = iprot.readString();
              struct.setClaveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DIRECCION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.direccion = iprot.readString();
              struct.setDireccionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NACIONALIDAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nacionalidad = iprot.readString();
              struct.setNacionalidadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Pasajero struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(DNI_FIELD_DESC);
      oprot.writeI32(struct.DNI);
      oprot.writeFieldEnd();
      if (struct.nombre != null) {
        oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
        oprot.writeString(struct.nombre);
        oprot.writeFieldEnd();
      }
      if (struct.apellido != null) {
        oprot.writeFieldBegin(APELLIDO_FIELD_DESC);
        oprot.writeString(struct.apellido);
        oprot.writeFieldEnd();
      }
      if (struct.telfono != null) {
        oprot.writeFieldBegin(TELFONO_FIELD_DESC);
        oprot.writeString(struct.telfono);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(MILLAS_FIELD_DESC);
      oprot.writeDouble(struct.millas);
      oprot.writeFieldEnd();
      if (struct.clave != null) {
        oprot.writeFieldBegin(CLAVE_FIELD_DESC);
        oprot.writeString(struct.clave);
        oprot.writeFieldEnd();
      }
      if (struct.direccion != null) {
        oprot.writeFieldBegin(DIRECCION_FIELD_DESC);
        oprot.writeString(struct.direccion);
        oprot.writeFieldEnd();
      }
      if (struct.nacionalidad != null) {
        oprot.writeFieldBegin(NACIONALIDAD_FIELD_DESC);
        oprot.writeString(struct.nacionalidad);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PasajeroTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PasajeroTupleScheme getScheme() {
      return new PasajeroTupleScheme();
    }
  }

  private static class PasajeroTupleScheme extends org.apache.thrift.scheme.TupleScheme<Pasajero> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Pasajero struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDNI()) {
        optionals.set(0);
      }
      if (struct.isSetNombre()) {
        optionals.set(1);
      }
      if (struct.isSetApellido()) {
        optionals.set(2);
      }
      if (struct.isSetTelfono()) {
        optionals.set(3);
      }
      if (struct.isSetEmail()) {
        optionals.set(4);
      }
      if (struct.isSetMillas()) {
        optionals.set(5);
      }
      if (struct.isSetClave()) {
        optionals.set(6);
      }
      if (struct.isSetDireccion()) {
        optionals.set(7);
      }
      if (struct.isSetNacionalidad()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetDNI()) {
        oprot.writeI32(struct.DNI);
      }
      if (struct.isSetNombre()) {
        oprot.writeString(struct.nombre);
      }
      if (struct.isSetApellido()) {
        oprot.writeString(struct.apellido);
      }
      if (struct.isSetTelfono()) {
        oprot.writeString(struct.telfono);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetMillas()) {
        oprot.writeDouble(struct.millas);
      }
      if (struct.isSetClave()) {
        oprot.writeString(struct.clave);
      }
      if (struct.isSetDireccion()) {
        oprot.writeString(struct.direccion);
      }
      if (struct.isSetNacionalidad()) {
        oprot.writeString(struct.nacionalidad);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Pasajero struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.DNI = iprot.readI32();
        struct.setDNIIsSet(true);
      }
      if (incoming.get(1)) {
        struct.nombre = iprot.readString();
        struct.setNombreIsSet(true);
      }
      if (incoming.get(2)) {
        struct.apellido = iprot.readString();
        struct.setApellidoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.telfono = iprot.readString();
        struct.setTelfonoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(5)) {
        struct.millas = iprot.readDouble();
        struct.setMillasIsSet(true);
      }
      if (incoming.get(6)) {
        struct.clave = iprot.readString();
        struct.setClaveIsSet(true);
      }
      if (incoming.get(7)) {
        struct.direccion = iprot.readString();
        struct.setDireccionIsSet(true);
      }
      if (incoming.get(8)) {
        struct.nacionalidad = iprot.readString();
        struct.setNacionalidadIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

