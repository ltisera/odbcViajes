/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ejnamespace;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-11-04")
public class Ciudad implements org.apache.thrift.TBase<Ciudad, Ciudad._Fields>, java.io.Serializable, Cloneable, Comparable<Ciudad> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Ciudad");

  private static final org.apache.thrift.protocol.TField ID_CIUDAD_FIELD_DESC = new org.apache.thrift.protocol.TField("idCiudad", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LATITUD_FIELD_DESC = new org.apache.thrift.protocol.TField("latitud", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LONGITUD_FIELD_DESC = new org.apache.thrift.protocol.TField("longitud", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BAJA_FIELD_DESC = new org.apache.thrift.protocol.TField("baja", org.apache.thrift.protocol.TType.BOOL, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CiudadStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CiudadTupleSchemeFactory();

  public int idCiudad; // required
  public java.lang.String nombre; // required
  public java.lang.String latitud; // required
  public java.lang.String longitud; // required
  public boolean baja; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID_CIUDAD((short)1, "idCiudad"),
    NOMBRE((short)2, "nombre"),
    LATITUD((short)3, "latitud"),
    LONGITUD((short)4, "longitud"),
    BAJA((short)5, "baja");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID_CIUDAD
          return ID_CIUDAD;
        case 2: // NOMBRE
          return NOMBRE;
        case 3: // LATITUD
          return LATITUD;
        case 4: // LONGITUD
          return LONGITUD;
        case 5: // BAJA
          return BAJA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDCIUDAD_ISSET_ID = 0;
  private static final int __BAJA_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID_CIUDAD, new org.apache.thrift.meta_data.FieldMetaData("idCiudad", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LATITUD, new org.apache.thrift.meta_data.FieldMetaData("latitud", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LONGITUD, new org.apache.thrift.meta_data.FieldMetaData("longitud", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BAJA, new org.apache.thrift.meta_data.FieldMetaData("baja", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Ciudad.class, metaDataMap);
  }

  public Ciudad() {
  }

  public Ciudad(
    int idCiudad,
    java.lang.String nombre,
    java.lang.String latitud,
    java.lang.String longitud,
    boolean baja)
  {
    this();
    this.idCiudad = idCiudad;
    setIdCiudadIsSet(true);
    this.nombre = nombre;
    this.latitud = latitud;
    this.longitud = longitud;
    this.baja = baja;
    setBajaIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Ciudad(Ciudad other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idCiudad = other.idCiudad;
    if (other.isSetNombre()) {
      this.nombre = other.nombre;
    }
    if (other.isSetLatitud()) {
      this.latitud = other.latitud;
    }
    if (other.isSetLongitud()) {
      this.longitud = other.longitud;
    }
    this.baja = other.baja;
  }

  public Ciudad deepCopy() {
    return new Ciudad(this);
  }

  @Override
  public void clear() {
    setIdCiudadIsSet(false);
    this.idCiudad = 0;
    this.nombre = null;
    this.latitud = null;
    this.longitud = null;
    setBajaIsSet(false);
    this.baja = false;
  }

  public int getIdCiudad() {
    return this.idCiudad;
  }

  public Ciudad setIdCiudad(int idCiudad) {
    this.idCiudad = idCiudad;
    setIdCiudadIsSet(true);
    return this;
  }

  public void unsetIdCiudad() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCIUDAD_ISSET_ID);
  }

  /** Returns true if field idCiudad is set (has been assigned a value) and false otherwise */
  public boolean isSetIdCiudad() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCIUDAD_ISSET_ID);
  }

  public void setIdCiudadIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCIUDAD_ISSET_ID, value);
  }

  public java.lang.String getNombre() {
    return this.nombre;
  }

  public Ciudad setNombre(java.lang.String nombre) {
    this.nombre = nombre;
    return this;
  }

  public void unsetNombre() {
    this.nombre = null;
  }

  /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
  public boolean isSetNombre() {
    return this.nombre != null;
  }

  public void setNombreIsSet(boolean value) {
    if (!value) {
      this.nombre = null;
    }
  }

  public java.lang.String getLatitud() {
    return this.latitud;
  }

  public Ciudad setLatitud(java.lang.String latitud) {
    this.latitud = latitud;
    return this;
  }

  public void unsetLatitud() {
    this.latitud = null;
  }

  /** Returns true if field latitud is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitud() {
    return this.latitud != null;
  }

  public void setLatitudIsSet(boolean value) {
    if (!value) {
      this.latitud = null;
    }
  }

  public java.lang.String getLongitud() {
    return this.longitud;
  }

  public Ciudad setLongitud(java.lang.String longitud) {
    this.longitud = longitud;
    return this;
  }

  public void unsetLongitud() {
    this.longitud = null;
  }

  /** Returns true if field longitud is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitud() {
    return this.longitud != null;
  }

  public void setLongitudIsSet(boolean value) {
    if (!value) {
      this.longitud = null;
    }
  }

  public boolean isBaja() {
    return this.baja;
  }

  public Ciudad setBaja(boolean baja) {
    this.baja = baja;
    setBajaIsSet(true);
    return this;
  }

  public void unsetBaja() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BAJA_ISSET_ID);
  }

  /** Returns true if field baja is set (has been assigned a value) and false otherwise */
  public boolean isSetBaja() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BAJA_ISSET_ID);
  }

  public void setBajaIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BAJA_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID_CIUDAD:
      if (value == null) {
        unsetIdCiudad();
      } else {
        setIdCiudad((java.lang.Integer)value);
      }
      break;

    case NOMBRE:
      if (value == null) {
        unsetNombre();
      } else {
        setNombre((java.lang.String)value);
      }
      break;

    case LATITUD:
      if (value == null) {
        unsetLatitud();
      } else {
        setLatitud((java.lang.String)value);
      }
      break;

    case LONGITUD:
      if (value == null) {
        unsetLongitud();
      } else {
        setLongitud((java.lang.String)value);
      }
      break;

    case BAJA:
      if (value == null) {
        unsetBaja();
      } else {
        setBaja((java.lang.Boolean)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID_CIUDAD:
      return getIdCiudad();

    case NOMBRE:
      return getNombre();

    case LATITUD:
      return getLatitud();

    case LONGITUD:
      return getLongitud();

    case BAJA:
      return isBaja();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID_CIUDAD:
      return isSetIdCiudad();
    case NOMBRE:
      return isSetNombre();
    case LATITUD:
      return isSetLatitud();
    case LONGITUD:
      return isSetLongitud();
    case BAJA:
      return isSetBaja();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Ciudad)
      return this.equals((Ciudad)that);
    return false;
  }

  public boolean equals(Ciudad that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idCiudad = true;
    boolean that_present_idCiudad = true;
    if (this_present_idCiudad || that_present_idCiudad) {
      if (!(this_present_idCiudad && that_present_idCiudad))
        return false;
      if (this.idCiudad != that.idCiudad)
        return false;
    }

    boolean this_present_nombre = true && this.isSetNombre();
    boolean that_present_nombre = true && that.isSetNombre();
    if (this_present_nombre || that_present_nombre) {
      if (!(this_present_nombre && that_present_nombre))
        return false;
      if (!this.nombre.equals(that.nombre))
        return false;
    }

    boolean this_present_latitud = true && this.isSetLatitud();
    boolean that_present_latitud = true && that.isSetLatitud();
    if (this_present_latitud || that_present_latitud) {
      if (!(this_present_latitud && that_present_latitud))
        return false;
      if (!this.latitud.equals(that.latitud))
        return false;
    }

    boolean this_present_longitud = true && this.isSetLongitud();
    boolean that_present_longitud = true && that.isSetLongitud();
    if (this_present_longitud || that_present_longitud) {
      if (!(this_present_longitud && that_present_longitud))
        return false;
      if (!this.longitud.equals(that.longitud))
        return false;
    }

    boolean this_present_baja = true;
    boolean that_present_baja = true;
    if (this_present_baja || that_present_baja) {
      if (!(this_present_baja && that_present_baja))
        return false;
      if (this.baja != that.baja)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idCiudad;

    hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
    if (isSetNombre())
      hashCode = hashCode * 8191 + nombre.hashCode();

    hashCode = hashCode * 8191 + ((isSetLatitud()) ? 131071 : 524287);
    if (isSetLatitud())
      hashCode = hashCode * 8191 + latitud.hashCode();

    hashCode = hashCode * 8191 + ((isSetLongitud()) ? 131071 : 524287);
    if (isSetLongitud())
      hashCode = hashCode * 8191 + longitud.hashCode();

    hashCode = hashCode * 8191 + ((baja) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(Ciudad other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdCiudad()).compareTo(other.isSetIdCiudad());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdCiudad()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idCiudad, other.idCiudad);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombre()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLatitud()).compareTo(other.isSetLatitud());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitud()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitud, other.latitud);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLongitud()).compareTo(other.isSetLongitud());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitud()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitud, other.longitud);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBaja()).compareTo(other.isSetBaja());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBaja()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.baja, other.baja);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Ciudad(");
    boolean first = true;

    sb.append("idCiudad:");
    sb.append(this.idCiudad);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombre:");
    if (this.nombre == null) {
      sb.append("null");
    } else {
      sb.append(this.nombre);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("latitud:");
    if (this.latitud == null) {
      sb.append("null");
    } else {
      sb.append(this.latitud);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("longitud:");
    if (this.longitud == null) {
      sb.append("null");
    } else {
      sb.append(this.longitud);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("baja:");
    sb.append(this.baja);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CiudadStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CiudadStandardScheme getScheme() {
      return new CiudadStandardScheme();
    }
  }

  private static class CiudadStandardScheme extends org.apache.thrift.scheme.StandardScheme<Ciudad> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Ciudad struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID_CIUDAD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idCiudad = iprot.readI32();
              struct.setIdCiudadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NOMBRE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombre = iprot.readString();
              struct.setNombreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LATITUD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.latitud = iprot.readString();
              struct.setLatitudIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LONGITUD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.longitud = iprot.readString();
              struct.setLongitudIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BAJA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.baja = iprot.readBool();
              struct.setBajaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Ciudad struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_CIUDAD_FIELD_DESC);
      oprot.writeI32(struct.idCiudad);
      oprot.writeFieldEnd();
      if (struct.nombre != null) {
        oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
        oprot.writeString(struct.nombre);
        oprot.writeFieldEnd();
      }
      if (struct.latitud != null) {
        oprot.writeFieldBegin(LATITUD_FIELD_DESC);
        oprot.writeString(struct.latitud);
        oprot.writeFieldEnd();
      }
      if (struct.longitud != null) {
        oprot.writeFieldBegin(LONGITUD_FIELD_DESC);
        oprot.writeString(struct.longitud);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BAJA_FIELD_DESC);
      oprot.writeBool(struct.baja);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CiudadTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CiudadTupleScheme getScheme() {
      return new CiudadTupleScheme();
    }
  }

  private static class CiudadTupleScheme extends org.apache.thrift.scheme.TupleScheme<Ciudad> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Ciudad struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdCiudad()) {
        optionals.set(0);
      }
      if (struct.isSetNombre()) {
        optionals.set(1);
      }
      if (struct.isSetLatitud()) {
        optionals.set(2);
      }
      if (struct.isSetLongitud()) {
        optionals.set(3);
      }
      if (struct.isSetBaja()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetIdCiudad()) {
        oprot.writeI32(struct.idCiudad);
      }
      if (struct.isSetNombre()) {
        oprot.writeString(struct.nombre);
      }
      if (struct.isSetLatitud()) {
        oprot.writeString(struct.latitud);
      }
      if (struct.isSetLongitud()) {
        oprot.writeString(struct.longitud);
      }
      if (struct.isSetBaja()) {
        oprot.writeBool(struct.baja);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Ciudad struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.idCiudad = iprot.readI32();
        struct.setIdCiudadIsSet(true);
      }
      if (incoming.get(1)) {
        struct.nombre = iprot.readString();
        struct.setNombreIsSet(true);
      }
      if (incoming.get(2)) {
        struct.latitud = iprot.readString();
        struct.setLatitudIsSet(true);
      }
      if (incoming.get(3)) {
        struct.longitud = iprot.readString();
        struct.setLongitudIsSet(true);
      }
      if (incoming.get(4)) {
        struct.baja = iprot.readBool();
        struct.setBajaIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

